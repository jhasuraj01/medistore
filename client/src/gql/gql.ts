/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

const documents = {
    "\n  query GetItems($organizationId: ID!, $branchId: ID!) {\n    items(organizationId: $organizationId, branchId: $branchId) {\n      organizationId\n      branchId\n      id\n      brandName\n      companyName\n      quantity\n      costPerUnit\n      pricePerUnit\n      discount\n      manufactureAt\n      expireAt\n    }\n  }\n": types.GetItemsDocument,
    "\n  mutation AddItem($organizationId: ID!, $branchId: ID!, $addItemId: ID!, $brandName: StringNonEmpty!, $companyName: StringNonEmpty!, $quantity: IntPositive!, $costPerUnit: FloatNonNegative!, $pricePerUnit: FloatNonNegative!, $manufactureAt: DatePast!, $discount: Float0To1, $expireAt: DateFuture) {\n    addItem(organizationId: $organizationId, branchId: $branchId, id: $addItemId, brandName: $brandName, companyName: $companyName, quantity: $quantity, costPerUnit: $costPerUnit, pricePerUnit: $pricePerUnit, manufactureAt: $manufactureAt, discount: $discount, expireAt: $expireAt)\n  }\n": types.AddItemDocument,
    "\n  mutation DeleteItem($organizationId: ID!, $branchId: ID!, $deleteItemId: ID!) {\n    deleteItem(organizationId: $organizationId, branchId: $branchId, id: $deleteItemId)\n  }\n": types.DeleteItemDocument,
    "\n  query GetCurrentUser {\n    currentUser {\n      organizationId\n    }\n  }\n": types.GetCurrentUserDocument,
    "\n  query GetBranches($organizationId: ID!) {\n    branches(organizationId: $organizationId) {\n      id\n      name\n    }\n  }\n": types.GetBranchesDocument,
    "\n  query GetMetaData {\n    metadata {\n      platform\n      buildAt\n      version\n    }\n  }\n": types.GetMetaDataDocument,
    "\n  mutation SetupOrganization($name: String!) {\n    setupOrganization(name: $name) {\n      organizationId\n    }\n  }\n": types.SetupOrganizationDocument,
};

export function graphql(source: "\n  query GetItems($organizationId: ID!, $branchId: ID!) {\n    items(organizationId: $organizationId, branchId: $branchId) {\n      organizationId\n      branchId\n      id\n      brandName\n      companyName\n      quantity\n      costPerUnit\n      pricePerUnit\n      discount\n      manufactureAt\n      expireAt\n    }\n  }\n"): (typeof documents)["\n  query GetItems($organizationId: ID!, $branchId: ID!) {\n    items(organizationId: $organizationId, branchId: $branchId) {\n      organizationId\n      branchId\n      id\n      brandName\n      companyName\n      quantity\n      costPerUnit\n      pricePerUnit\n      discount\n      manufactureAt\n      expireAt\n    }\n  }\n"];
export function graphql(source: "\n  mutation AddItem($organizationId: ID!, $branchId: ID!, $addItemId: ID!, $brandName: StringNonEmpty!, $companyName: StringNonEmpty!, $quantity: IntPositive!, $costPerUnit: FloatNonNegative!, $pricePerUnit: FloatNonNegative!, $manufactureAt: DatePast!, $discount: Float0To1, $expireAt: DateFuture) {\n    addItem(organizationId: $organizationId, branchId: $branchId, id: $addItemId, brandName: $brandName, companyName: $companyName, quantity: $quantity, costPerUnit: $costPerUnit, pricePerUnit: $pricePerUnit, manufactureAt: $manufactureAt, discount: $discount, expireAt: $expireAt)\n  }\n"): (typeof documents)["\n  mutation AddItem($organizationId: ID!, $branchId: ID!, $addItemId: ID!, $brandName: StringNonEmpty!, $companyName: StringNonEmpty!, $quantity: IntPositive!, $costPerUnit: FloatNonNegative!, $pricePerUnit: FloatNonNegative!, $manufactureAt: DatePast!, $discount: Float0To1, $expireAt: DateFuture) {\n    addItem(organizationId: $organizationId, branchId: $branchId, id: $addItemId, brandName: $brandName, companyName: $companyName, quantity: $quantity, costPerUnit: $costPerUnit, pricePerUnit: $pricePerUnit, manufactureAt: $manufactureAt, discount: $discount, expireAt: $expireAt)\n  }\n"];
export function graphql(source: "\n  mutation DeleteItem($organizationId: ID!, $branchId: ID!, $deleteItemId: ID!) {\n    deleteItem(organizationId: $organizationId, branchId: $branchId, id: $deleteItemId)\n  }\n"): (typeof documents)["\n  mutation DeleteItem($organizationId: ID!, $branchId: ID!, $deleteItemId: ID!) {\n    deleteItem(organizationId: $organizationId, branchId: $branchId, id: $deleteItemId)\n  }\n"];
export function graphql(source: "\n  query GetCurrentUser {\n    currentUser {\n      organizationId\n    }\n  }\n"): (typeof documents)["\n  query GetCurrentUser {\n    currentUser {\n      organizationId\n    }\n  }\n"];
export function graphql(source: "\n  query GetBranches($organizationId: ID!) {\n    branches(organizationId: $organizationId) {\n      id\n      name\n    }\n  }\n"): (typeof documents)["\n  query GetBranches($organizationId: ID!) {\n    branches(organizationId: $organizationId) {\n      id\n      name\n    }\n  }\n"];
export function graphql(source: "\n  query GetMetaData {\n    metadata {\n      platform\n      buildAt\n      version\n    }\n  }\n"): (typeof documents)["\n  query GetMetaData {\n    metadata {\n      platform\n      buildAt\n      version\n    }\n  }\n"];
export function graphql(source: "\n  mutation SetupOrganization($name: String!) {\n    setupOrganization(name: $name) {\n      organizationId\n    }\n  }\n"): (typeof documents)["\n  mutation SetupOrganization($name: String!) {\n    setupOrganization(name: $name) {\n      organizationId\n    }\n  }\n"];

export function graphql(source: string): unknown;
export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;